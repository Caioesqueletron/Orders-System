server.servlet.context-path=/api
server.port=8084

elastic.apm.server-url=${APM_HOST:}


spring.application.name=pedido-ms
# for Spring Boot 2.2.x+
logging.file.name=/home/caiovfa/logs/pedido-ms.log

###### CONFIGURAÇÂO KAFKA ######
###### PRODUCER ######
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.pruducer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.spring.json.type.mapping=PedidoDTO:br.com.ecommerce.school.pedidosms.dto.PedidoDTO
###### CONSUMER ######
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=PedidoFinalizadoDTO:br.com.ecommerce.school.pedidosms.dto\
  .PedidoFinalizadoDTO,ErroNotificacaoDTO:br.com.ecommerce.school.pedidosms.dto.PedidoErroDTO
spring.kafka.consumer.group-id=pedidos

###### TOPICOS PRODUCERS ######
criar.pedido=criar_pedido
pedido.finalizado=pedido_finalizado
pedido.erro=pedido_erro

####### CONFIGURACAO DE BANCO #######
spring.datasource.url=jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/pedidos
spring.datasource.username=${DATABASE_USER:root}
spring.datasource.password=${DATABASE_PASS:password}
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

####### CLIENTE ########
url.server.cliente=http://${CLIENTES_HOST:cliente}:${CLIENTES_PORT:8082}
uri.buscar.cliente=${CLIENTES_SEARCH_ENDPOINT:/api/clientes/{cliente}}

####### PRODUTO ########
url.server.produto=http://${PRODUTOS_HOST:produto}:${PRODUTOS_PORT:8081}
uri.buscar.produto=${PRODUTOS_SEARCH_ENDPOINT:/api/produtos/{produto}}

spring.kafka.producer.bootstrap-servers=${KAFKA_PRODUCER_HOST:localhost:9094}
spring.kafka.consumer.bootstrap-servers=${KAFKA_CONSUMER_HOST:localhost:9094}


management.endpoint.env.enabled=true
management.endpoints.web.exposure.include=*